{{ $GenContainer := where $ "ID" .Docker.CurrentContainerID | first }}
<system>
  rpc_endpoint 127.0.0.1:24220
</system>

<source>
@type forward
</source>

# Capture panics from go programs
<filter docker.core.**>
@type concat
@log_level debug
key log
multiline_start_regexp /^panic:/
multiline_end_regexp /^created by/
</filter>

# Parse them into json
<filter docker.core.**>
@type parser

key_name log
format multi_format
   <pattern>
     format json
     time_format %Y-%m-%dT%H:%M:%S%z
   </pattern>

   <pattern>
     format multiline
     format_firstline /^panic:/
     format1 /^(?<panic>panic:.*)/
     format2 /^(?<trace>goroutine.*)/
   </pattern>
</filter>

# Special rule for nginx since it can output json
<filter docker.nginx>
@type parser
format json
key_name log
time_format %Y-%m-%dT%H:%M:%S%z
</filter>

{{range $key, $CurrentContainer := whereLabelExists . "fluentd.tag"}}
    {{$service := index $CurrentContainer.Labels "fluentd.tag"}}
    {{$project := index $CurrentContainer.Labels "com.docker.compose.project"}}
    {{$isCoreService := hasPrefix "core" (print $service)}}

    <match docker.{{$service}}>
        @type copy
        deep_copy true
        {{if or $GenContainer.Env.AWS_KEY_ID $GenContainer.Env.AWS_SECRET_KEY $GenContainer.Env.AWS_REGION}}
        <store>
            @type s3
            @log_level debug
            aws_key_id {{$GenContainer.Env.AWS_KEY_ID}}
            aws_sec_key {{$GenContainer.Env.AWS_SECRET_KEY}}
            s3_bucket {{$project}}
            s3_region {{$GenContainer.Env.AWS_REGION}}
            path {{replace $service "." "/" -1}}/{{$CurrentContainer.Name}}/
            buffer_path /fluentd/buffer/{{$CurrentContainer.Name}}/
            store_as json
            format json
            include_time_key true
            time_key time
            include_tag_key true
            time_slice_format %Y%m%d
            time_slice_wait 1m
            utc
        </store>
        {{end}}
        {{if or $GenContainer.Env.AWS_KEY_ID $GenContainer.Env.AWS_SECRET_KEY $GenContainer.Env.AWS_REGION}}
         <store>
             @type cloudwatch_logs
             @log_level debug
             region {{$GenContainer.Env.AWS_REGION}}
             aws_key_id {{$GenContainer.Env.AWS_KEY_ID}}
             aws_sec_key {{$GenContainer.Env.AWS_SECRET_KEY}}
             log_group_name {{$project}}
             log_stream_name {{$service}}
             auto_create_stream true
             include_time_key true
             {{if or $isCoreService (eq $service "nginx")}}#{{end}}message_keys log
         </store>
         {{end}}

         {{if index $CurrentContainer.Labels "fluentd.influxdb.tags"}}
         {{if or $GenContainer.Env.INFLUXDB_DATABASE $GenContainer.Env.INFLUXDB_ADMIN_USER $GenContainer.Env.INFLUXDB_ADMIN_PASSWORD}}
         <store>
             @type influxdb
             @log_level debug
             host influxdb
             port 8086
             dbname {{$GenContainer.Env.INFLUXDB_DATABASE}}
             user {{$GenContainer.Env.INFLUXDB_ADMIN_USER}}
             password {{$GenContainer.Env.INFLUXDB_ADMIN_PASSWORD}}
             time_precision s
             tag_keys {{index $CurrentContainer.Labels "fluentd.influxdb.tags"}}
             {{if index $CurrentContainer.Labels "fluentd.influxdb.measurement"}}
             measurement {{index $CurrentContainer.Labels "fluentd.influxdb.measurement"}}
             {{end}}
          </store>
         {{end}}
         {{end}}
         {{if $CurrentContainer.Env.FLUENTD_STDOUT}}
         <store>
            @type stdout
         </store>
         {{end}}
    </match>
{{end}}

