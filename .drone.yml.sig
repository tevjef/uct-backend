eyJhbGciOiJIUzI1NiJ9.workspace:
  base: /go
  path: src/github.com/tevjef/uct-core

pipeline:
  core:
    image: golang:1.9-alpine
    environment:
      - GOPATH=/go
    commands:
      - go version
      - export GOOS=linux
      - export GOARCH=amd64
      - apk update
      - apk --no-cache add ca-certificates openssl git
      - update-ca-certificates
      - go get -u github.com/golang/dep/cmd/dep
      - dep ensure -v
      - export PATH=$PATH:$GOPATH/bin
      - go install -v -ldflags "-s -w" github.com/tevjef/uct-core/ein
      - go install -v -ldflags "-s -w" github.com/tevjef/uct-core/hermes
      - go install -v -ldflags "-s -w" github.com/tevjef/uct-core/julia
      - go install -v -ldflags "-s -w" github.com/tevjef/uct-core/scrapers/rutgers
      - go install -v -ldflags "-s -w" github.com/tevjef/uct-core/scrapers/njit
      - go install -v -ldflags "-s -w" github.com/tevjef/uct-core/scrapers/cuny
      - go install -v -ldflags "-s -w" github.com/tevjef/uct-core/jet
      - go install -v -ldflags "-s -w" github.com/tevjef/uct-core/spike
    when:
      event: [push, pull_request, tag, deployment]

  common:
    image: library/docker:dind
    commands:
      - cp /go/bin/ein docker/ein/
      - cp /go/bin/spike docker/spike/
      - cp /go/bin/hermes docker/hermes/
      - cp /go/bin/julia docker/julia/

      - cp /go/bin/rutgers docker/rutgers/
      - cp /go/bin/njit docker/njit/
      - cp /go/bin/cuny docker/cuny/

      - cp /go/bin/jet docker/rutgers/
      - cp /go/bin/jet docker/njit/
      - cp /go/bin/jet docker/cuny/

      - cp common/conf/config.toml docker/ein/
      - cp common/conf/config.toml docker/spike/
      - cp common/conf/config.toml docker/hermes/
      - cp common/conf/config.toml docker/julia/
      - cp common/conf/config.toml docker/rutgers/
      - cp common/conf/config.toml docker/njit/
      - cp common/conf/config.toml docker/cuny/
    when:
      branch: [master, staging, develop]
      event: [push, tag, deployment]

  production:
    image: library/docker:dind
    commands:
      - docker login --username=$DOCKER_USERNAME --password=$DOCKER_PASSWORD

      - docker build -t tevjef/ein:production -f docker/ein/Dockerfile docker/ein
      - docker build -t tevjef/spike:production -f docker/spike/Dockerfile docker/spike
      - docker build -t tevjef/hermes:production -f docker/hermes/Dockerfile docker/hermes
      - docker build -t tevjef/julia:production -f docker/julia/Dockerfile docker/julia
      - docker build -t tevjef/rutgers:production -f docker/rutgers/Dockerfile docker/rutgers
      - docker build -t tevjef/njit:production -f docker/njit/Dockerfile docker/njit
      - docker build -t tevjef/cuny:production -f docker/cuny/Dockerfile docker/cuny
      - docker build -t tevjef/postgresql:production -f support/postgresql/Dockerfile support/postgresql

      - docker push tevjef/ein:production
      - docker push tevjef/spike:production
      - docker push tevjef/hermes:production
      - docker push tevjef/julia:production
      - docker push tevjef/rutgers:production
      - docker push tevjef/njit:production
      - docker push tevjef/cuny:production
      - docker push tevjef/postgresql:production
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    when:
      branch: master
      event: [push, tag, deployment]

  staging:
    image: library/docker:dind
    commands:
      - docker login --username=$DOCKER_USERNAME --password=$DOCKER_PASSWORD

      - docker build -t tevjef/ein:staging -f docker/ein/Dockerfile docker/ein
      - docker build -t tevjef/spike:staging -f docker/spike/Dockerfile docker/spike
      - docker build -t tevjef/hermes:staging -f docker/hermes/Dockerfile docker/hermes
      - docker build -t tevjef/julia:staging -f docker/julia/Dockerfile docker/julia
      - docker build -t tevjef/rutgers:staging -f docker/rutgers/Dockerfile docker/rutgers
      - docker build -t tevjef/njit:staging -f docker/njit/Dockerfile docker/njit
      - docker build -t tevjef/cuny:staging -f docker/cuny/Dockerfile docker/cuny
      - docker build -t tevjef/postgresql:staging -f support/postgresql/Dockerfile support/postgresql

      - docker push tevjef/ein:staging
      - docker push tevjef/spike:staging
      - docker push tevjef/hermes:staging
      - docker push tevjef/julia:staging
      - docker push tevjef/rutgers:staging
      - docker push tevjef/njit:staging
      - docker push tevjef/cuny:staging
      - docker push tevjef/postgresql:staging
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    when:
      branch: staging
      event: [push, tag, deployment]

  develop:
    image: library/docker:dind
    commands:
      - docker login --username=$DOCKER_USERNAME --password=$DOCKER_PASSWORD

      - printenv
      - docker build -t tevjef/ein:develop -f docker/ein/Dockerfile docker/ein
      - docker build -t tevjef/spike:develop -f docker/spike/Dockerfile docker/spike
      - docker build -t tevjef/hermes:develop -f docker/hermes/Dockerfile docker/hermes
      - docker build -t tevjef/julia:develop -f docker/julia/Dockerfile docker/julia
      - docker build -t tevjef/rutgers:develop -f docker/rutgers/Dockerfile docker/rutgers
      - docker build -t tevjef/njit:develop -f docker/njit/Dockerfile docker/njit
      - docker build -t tevjef/cuny:develop -f docker/cuny/Dockerfile docker/cuny
      - docker build -t tevjef/postgresql:develop -f support/postgresql/Dockerfile support/postgresql

      - docker push tevjef/ein:develop
      - docker push tevjef/spike:develop
      - docker push tevjef/hermes:develop
      - docker push tevjef/julia:develop
      - docker push tevjef/rutgers:develop
      - docker push tevjef/njit:develop
      - docker push tevjef/cuny:develop
      - docker push tevjef/postgresql:develop

    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    when:
      branch: develop
      event: [push]

  kubernetes:
    image: library/docker:dind
    commands:
      - docker login --username=$DOCKER_USERNAME --password=$DOCKER_PASSWORD

      # Install Kubectl
      - apk update
      - apk add curl
      - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
      - chmod +x ./kubectl && mv ./kubectl /usr/local/bin/kubectl

      # Setup Kubectl
      - kubectl config set-credentials default --token=$(echo -n $KUBERNETES_TOKEN | base64 -d)
      - kubectl config set-cluster default --server=$KUBERNETES_MASTER --insecure-skip-tls-verify=true
      - kubectl config set-context default --cluster=default --user=default
      - kubectl config use-context default

      - DIGEST=$(docker inspect --format='{{ index .RepoDigests 0 }}' tevjef/ein:staging)
      - kubectl -n staging set image deployment/ein ein=$DIGEST
  
      - DIGEST=$(docker inspect --format='{{ index .RepoDigests 0 }}' tevjef/spike:staging)
      - kubectl -n staging set image deployment/spike spike=$DIGEST
  
      - DIGEST=$(docker inspect --format='{{ index .RepoDigests 0 }}' tevjef/hermes:staging)
      - kubectl -n staging set image deployment/hermes hermes=$DIGEST
  
      - DIGEST=$(docker inspect --format='{{ index .RepoDigests 0 }}' tevjef/julia:staging)
      - kubectl -n staging set image deployment/julia julia=$DIGEST
  
      - DIGEST=$(docker inspect --format='{{ index .RepoDigests 0 }}' tevjef/rutgers:staging)
      - kubectl -n staging set image deployment/rutgers-cm rutgers-cm=$DIGEST
      - kubectl -n staging set image deployment/rutgers-nb rutgers-nb=$DIGEST
      - kubectl -n staging set image deployment/rutgers-nk rutgers-nk=$DIGEST

      - DIGEST=$(docker inspect --format='{{ index .RepoDigests 0 }}' tevjef/njit:staging)
      - kubectl -n staging set image deployment/njit njit=$DIGEST

      - DIGEST=$(docker inspect --format='{{ index .RepoDigests 0 }}' tevjef/cuny:staging)
      - kubectl -n staging set image deployment/cuny-bar cuny-bar=$DIGEST
      - kubectl -n staging set image deployment/cuny-bcc cuny-bcc=$DIGEST
      - kubectl -n staging set image deployment/cuny-bkl cuny-bkl=$DIGEST
      - kubectl -n staging set image deployment/cuny-bmc cuny-bmc=$DIGEST
      - kubectl -n staging set image deployment/cuny-csi cuny-csi=$DIGEST
      - kubectl -n staging set image deployment/cuny-cty cuny-cty=$DIGEST
      - kubectl -n staging set image deployment/cuny-hos cuny-hos=$DIGEST
      - kubectl -n staging set image deployment/cuny-htr cuny-htr=$DIGEST
      - kubectl -n staging set image deployment/cuny-jjc cuny-jjc=$DIGEST
      - kubectl -n staging set image deployment/cuny-kcc cuny-kcc=$DIGEST
      - kubectl -n staging set image deployment/cuny-lag cuny-lag=$DIGEST
      - kubectl -n staging set image deployment/cuny-leh cuny-leh=$DIGEST
      - kubectl -n staging set image deployment/cuny-mec cuny-mec=$DIGEST
      - kubectl -n staging set image deployment/cuny-nyt cuny-nyt=$DIGEST
      - kubectl -n staging set image deployment/cuny-qcc cuny-qcc=$DIGEST
      - kubectl -n staging set image deployment/cuny-qns cuny-qns=$DIGEST
      - kubectl -n staging set image deployment/cuny-yrk cuny-yrk=$DIGEST

    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    when:
      branch: staging
      event: [push].Mk0Pty13afsz9SObCZeYBYkAZYENLvs6XMWaLY6YYeQ